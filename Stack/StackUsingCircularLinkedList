public class StackUsingCircularLinkedList {
    class Node {
        int data;
        Node next;

        Node(int data){
            this.data = data;
            this.next = null;
        }
    }

    class Stack{
        Node head = null;
        Node tail = null;

        public boolean isEmpty(){
            return head == null && tail == null;
        }

        public void Push(int data){
            Node newNode = new Node(data);
            
            if (isEmpty()) {
                head = tail = newNode;
                tail.next = head;
                return ;
            }

            newNode.next = head;
            tail.next = newNode;
            head = newNode;
        }

        public int pop(){
            if (isEmpty()) {
                System.out.println("Stack is empty.");
                return -1;
            }

            int res = head.data;

            if (head == tail) {
                head = tail = null;
            }else{
                head = head.next;
                tail.next = head;
            }
            return res;
        }

        public int peek(){
            if (isEmpty()) {
                System.out.println("Stack is empty.");
                return -1;
            }
            return head.data;
        }
    }

    public static void main(String[] args) {
        StackUsingCircularLinkedList.Stack s3 = new StackUsingCircularLinkedList().new Stack();
        s3.Push(1);
        s3.Push(2);
        s3.Push(3);
        s3.Push(4);
        System.out.println(s3.peek());
        System.out.println(s3.pop());
        System.out.println(s3.pop());
        System.out.println(s3.pop());
        System.out.println(s3.pop());
        System.out.println(s3.pop());


    }
}
